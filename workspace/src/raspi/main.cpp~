#include "ros/ros.h"
#include "sensor_msgs/LaserScan.h"

float angle_max = 2.0923497676849365;
float angle_min = -2.0862138271331787;
float angle_increment = 0.00613592332229;

void laserScanCallback(const sensor_msgs::LaserScan::ConstPtr& scan)
{
  //ROS_INFO("Entered laser scan callback.");

  // find the angle at which distance is smallest
  float angle, val;
  float min = 9999;
  float i = angle_min;
  float j = 0;

  for (; i <= angle_max; i = i + angle_increment, j++)
  {
    val = scan->ranges[j];
    if (val < min)
    {
      min = val;
      angle = i;
    }
  }

  ROS_INFO("Angle: %f", angle);
}

int main(int argc, char **argv)
{
  ros::init(argc, argv, "main");

  ros::NodeHandle nh;
  ros::Subscriber scanSub;

  ROS_INFO("Program has started.");

  // adjust Hokuyo laser limits
  nh.setParam("/hokuyo_node/max_ang", angle_max);                                              
  nh.setParam("/hokuyo_node/min_ang", angle_min); 

  scanSub = nh.subscribe("/scan", 1000, laserScanCallback);

  ros::spin();

  return 0;
}
